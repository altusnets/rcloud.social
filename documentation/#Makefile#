# DOC_DIR is the base source directory containing the folders with the individual
# release documentation (e.g. 1.3,1.4, ...).
#
# Be careful how this directory is named because it is used as a string match
# target in the creation of the DST variable below. Don't use a string that
# will match an existing sub-string in the target path (like 'guidoc','doc' or
# 'whatsnew' because this will confuse the string substitution and generate the
# wrong output path.
# DOC_DIR = ../../../../rcloud-docs/rcloud/doc

DOC_DIR = ../doc

OUTDIR = .

DOC_BASEPATH = ../../../..
BASEPATH = ..

OUT_DIR = $(OUTDIR)/documentation

# base doc output directory
OUTDOC_DIR = $(OUT_DIR)/doc

# Pandoc compile options 
PANDOC_OPTS= --from=markdown --to=html \
	--template=pandoc_html.template \
	--css=$(BASEPATH)/css/doc.css  \
	--toc --toc-depth=4 \
	--include-in-head=doc_head.html


# Get a list of the directories rooted on $(DOC_DIR)
DIRS  = $(shell find $(DOC_DIR) -type d)

# Find all files in folders listed in $(DIRS) with 'md' extension.
SRC =  $(foreach DIR,$(DIRS),$(wildcard $(DIR)/*.md))

# Generate an output file name for each src file.
DST =  $(foreach fn,$(SRC), $(subst .md,.html,$(subst $(DOC_DIR),$(OUTDOC_DIR),$(fn))))

# Create a list of output directories
DST_DIRS = $(foreach dir,$(DIRS),$(subst  $(DOC_DIR),$(OUTDOC_DIR),$(dir)))

# Create a list of source image dir's
SRC_IMG_DIRS = $(foreach src,$(SRC),$(dir $(src))img)

# Create a list of source images
SRC_IMG      = $(foreach dir,$(SRC_IMG_DIRS),$(wildcard $(dir)/*))

# Create a list of output image dirs
DST_IMG_DIRS = $(foreach dir,$(SRC_IMG_DIRS), $(subst $(DOC_DIR),$(OUTDOC_DIR),$(dir)))

# Create a list of output images
DST_IMG      = $(foreach fn,$(SRC_IMG), $(subst $(DOC_DIR),$(OUTDOC_DIR),$(fn)))

# Build the output tree then process the pandoc files and copy the image files
all: makedirs $(DST) $(DST_IMG) index.html

.PHONY : all makedirs $(DST_DIRS) clean

define make-goal

$1: $2  pandoc_html.template doc_head.html
	@echo $$< " to " $$@
	pandoc $(PANDOC_OPTS) -o $$@ $$<
endef

# Generate a recipe for each SRC markdown file
$(foreach fn,$(SRC),$(eval $(call make-goal,$(subst .md,.html, $(subst $(DOC_DIR),$(OUTDOC_DIR),$(fn))) ,$(fn))))

define make-goal-img
$1: $2
	@echo $$< " to " $$@
	cp $$< $$@
endef

# Generate a recipe foe each source image file
$(foreach fn,$(SRC_IMG),$(eval $(call make-goal-img,$(subst $(DOC_DIR),$(OUTDOC_DIR),$(fn)),$(fn))))


# Build the output tree.
# We need a first step so that we
# have a single rule to refer to in 'all'.
makedirs: $(DST_DIRS) $(DST_IMG_DIRS)

# we need a second rule so that the
# targets are the directories 
$(DST_DIRS):
	@mkdir -p $@

# Use ../hmtl/head_template.html to generate a <head> include file with the CSS and Javscript refrences
# pointing to the correct location.
doc_head.html : ../html/head_template.html
	pandoc --template=../html/head_template.html --variable=basepath:$(DOC_BASEPATH) -o doc_head.html ../dummy.pd

# Build the documentation overview page.
index.html : index.pd ../html/index_template.html5 index_style.css head.html
	mkdir -p $(OUT_DIR)
	pandoc \
	--to=html5 \
	--from=markdown  \
	--template=../html/index_template.html5 \
	--include-in-header=head.html \
	--include-before-body=../html/body_top.html \
	--include-after-body=../html/body_bottom.html \
	--css="index_style.css" \
	-o $(OUT_DIR)/index.html index.pd

# Build the documentation overview page <head> include file.
head.html : ../html/head_template.html
	pandoc --template=../html/head_template.html --variable=basepath:$(BASEPATH) -o head.html ../dummy.pd



clean :
	rm -f $(DST) head.html doc_head.html $(OUT_DIR)/index.html
